# Configure the AWS Provider
provider "aws" {
  region = var.aws_region
}

# Variables
variable "aws_region" {
  description = "AWS region to deploy to"
  default     = "us-east-1"
}

variable "instance_type" {
  description = "EC2 instance type"
  default     = "t3.micro"
}

variable "ami_id" {
  description = "AMI ID to use for the EC2 instance"
  # You'll need to replace this with the AMI ID generated by nixos-generators
  default     = "ami-0123456789abcdef0"
}

variable "ssh_key_name" {
  description = "Name of the SSH key pair to use for the EC2 instance"
  default     = "my-key"
}

# Create a VPC
resource "aws_vpc" "nixos_vpc" {
  cidr_block           = "10.0.0.0/16"
  enable_dns_hostnames = true
  
  tags = {
    Name = "NixOS VPC"
  }
}

# Create a subnet
resource "aws_subnet" "nixos_subnet" {
  vpc_id                  = aws_vpc.nixos_vpc.id
  cidr_block              = "10.0.1.0/24"
  map_public_ip_on_launch = true
  
  tags = {
    Name = "NixOS Subnet"
  }
}

# Create an internet gateway
resource "aws_internet_gateway" "nixos_igw" {
  vpc_id = aws_vpc.nixos_vpc.id
  
  tags = {
    Name = "NixOS Internet Gateway"
  }
}

# Create a route table
resource "aws_route_table" "nixos_route_table" {
  vpc_id = aws_vpc.nixos_vpc.id
  
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.nixos_igw.id
  }
  
  tags = {
    Name = "NixOS Route Table"
  }
}

# Associate the route table with the subnet
resource "aws_route_table_association" "nixos_route_table_assoc" {
  subnet_id      = aws_subnet.nixos_subnet.id
  route_table_id = aws_route_table.nixos_route_table.id
}

# Create a security group
resource "aws_security_group" "nixos_sg" {
  name        = "nixos-sg"
  description = "Allow SSH, HTTP, and HTTPS traffic"
  vpc_id      = aws_vpc.nixos_vpc.id
  
  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  
  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  
  ingress {
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  
  tags = {
    Name = "NixOS Security Group"
  }
}

# Create an EC2 instance
resource "aws_instance" "nixos_instance" {
  ami                    = var.ami_id
  instance_type          = var.instance_type
  key_name               = var.ssh_key_name
  subnet_id              = aws_subnet.nixos_subnet.id
  vpc_security_group_ids = [aws_security_group.nixos_sg.id]
  
  tags = {
    Name = "NixOS Server"
  }
}

# Output the public IP address of the instance
output "public_ip" {
  value = aws_instance.nixos_instance.public_ip
}

# Output the public DNS name of the instance
output "public_dns" {
  value = aws_instance.nixos_instance.public_dns
}