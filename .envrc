use flake

# Load AWS environment variables if credentials exist
if [ -f ~/.aws/credentials ]; then
  echo "AWS credentials found. Run 'aws sso login' if you need to authenticate."
fi

# Load Azure environment variables if configured
if command -v az >/dev/null 2>&1; then
  AZURE_ACCOUNT=$(az account show --query name -o tsv 2>/dev/null)
  if [ $? -eq 0 ]; then
    echo "Azure logged in as: $AZURE_ACCOUNT"
  else
    echo "Azure CLI installed but not logged in. Run 'az login' to authenticate."
  fi
fi

# Load GCP environment variables if configured
if command -v gcloud >/dev/null 2>&1; then
  GCLOUD_ACCOUNT=$(gcloud config get-value account 2>/dev/null)
  if [ -n "$GCLOUD_ACCOUNT" ]; then
    echo "GCP logged in as: $GCLOUD_ACCOUNT"
  else
    echo "GCP CLI installed but not logged in. Run 'gcloud auth login' to authenticate."
  fi
fi

# Set Terraform log level (uncomment to enable)
# export TF_LOG=INFO

# Set default region for AWS if not set
if [ -z "$AWS_REGION" ]; then
  export AWS_REGION="us-west-2"
  echo "Setting default AWS_REGION to $AWS_REGION"
fi

# Convenience function to switch between cloud providers
cloud() {
  case "$1" in
    aws)
      cd "$PWD/AWS/terraform" || return
      echo "Switched to AWS Terraform directory"
      ;;
    azure)
      cd "$PWD/Azure/terraform" || return
      echo "Switched to Azure Terraform directory"
      ;;
    gcp)
      cd "$PWD/GCP/terraform" || return
      echo "Switched to GCP Terraform directory"
      ;;
    *)
      echo "Usage: cloud [aws|azure|gcp]"
      ;;
  esac
}

echo "üå•Ô∏è  Cloud Development Environment Ready üå•Ô∏è"
echo "Type 'cloud aws|azure|gcp' to quickly navigate to Terraform directories"